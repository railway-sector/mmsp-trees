"use strict";(self.webpackChunkmmsp_trees=self.webpackChunkmmsp_trees||[]).push([[9358],{9358:(e,r,s)=>{s.r(r),s.d(r,{default:()=>c});var t=s(35143),a=s(50076),i=s(46053),l=(s(81806),s(76460),s(47249),s(85842)),p=s(2190),n=s(68649);let o=class extends((0,n.A)(p.A)){constructor(){super(...arguments),this.type="ogc-feature-3d"}initialize(){this.layer.serviceSupportsSpatialReference(this.view.spatialReference)||this.addResolvingPromise(Promise.reject(new a.A("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:this.layer})))}};(0,t._)([(0,i.MZ)()],o.prototype,"layer",void 0),o=(0,t._)([(0,l.$)("esri.views.3d.layers.OGCFeatureLayerView3D")],o);const c=o},68649:(e,r,s)=>{s.d(r,{A:()=>l});var t=s(35143),a=s(46053),i=(s(81806),s(76460),s(47249),s(85842));const l=e=>{let r=class extends e{get availableFields(){return this.layer.fieldsIndex.fields.map(e=>e.name)}};return(0,t._)([(0,a.MZ)()],r.prototype,"layer",void 0),(0,t._)([(0,a.MZ)({readOnly:!0})],r.prototype,"availableFields",null),r=(0,t._)([(0,i.$)("esri.views.layers.OGCFeatureLayerView")],r),r}}}]);
//# sourceMappingURL=9358.8c18039c.chunk.js.map