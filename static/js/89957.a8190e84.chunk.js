"use strict";(self.webpackChunkmmsp_trees=self.webpackChunkmmsp_trees||[]).push([[89957],{89957:(e,t,n)=>{n.r(t),n.d(t,{invokeGeometryOp:()=>s});var i=n(19902);function r(e,t){let n;return{loaded:!1,load:()=>n??=t().then(t=>{c[e]={loaded:!0,execute:t}})}}function a(e){return null==e?null:e.toJSON()}const c={disjoint:r("disjoint",()=>n.e(80352).then(n.bind(n,80352)).then(e=>e.execute)),intersects:r("intersects",()=>n.e(95838).then(n.bind(n,95838)).then(e=>e.execute)),touches:r("touches",()=>n.e(66521).then(n.bind(n,66521)).then(e=>e.execute)),crosses:r("crosses",()=>n.e(56050).then(n.bind(n,56050)).then(e=>e.execute)),within:r("within",()=>n.e(51475).then(n.bind(n,51475)).then(e=>e.execute)),contains:r("contains",()=>n.e(27353).then(n.bind(n,27353)).then(e=>e.execute)),overlaps:r("overlaps",()=>n.e(34744).then(n.bind(n,34744)).then(e=>e.execute)),equals:r("equals",async()=>{const e=await n.e(72442).then(n.bind(n,72442));return(t,n)=>e.execute((0,i.rS)(t),(0,i.rS)(n))}),relate:r("relate",async()=>{const e=await n.e(16358).then(n.bind(n,16358));return(t,n,r)=>e.execute((0,i.rS)(t),(0,i.rS)(n),r)}),intersection:r("intersection",()=>n.e(33477).then(n.bind(n,33477)).then(e=>e.execute)),union:r("union",()=>n.e(8673).then(n.bind(n,8673)).then(e=>e.executeMany)),difference:r("difference",async()=>{const e=await n.e(27568).then(n.bind(n,27568));return(t,n)=>a(e.execute((0,i.rS)(t),(0,i.rS)(n)))}),symmetricDifference:r("symmetricDifference",async()=>{const e=await n.e(83083).then(n.bind(n,83083));return(t,n)=>a(e.execute((0,i.rS)(t),(0,i.rS)(n)))}),clip:r("clip",async()=>{const e=await n.e(265).then(n.bind(n,265));return(t,n)=>a(e.execute((0,i.rS)(t),(0,i.rS)(n)))}),cut:r("cut",async()=>{const e=await n.e(34855).then(n.bind(n,34855));return(t,n)=>e.execute((0,i.rS)(t),(0,i.rS)(n)).map(e=>a(e))}),area:r("area",async()=>{const e=await n.e(84866).then(n.bind(n,84866)),{convertFromSpatialReferenceUnit:t,toAreaUnit:r}=await n.e(41802).then(n.bind(n,41802));return(n,a)=>{const c=e.execute((0,i.rS)(n));return t(n.spatialReference,r(a),c)}}),geodeticArea:r("geodeticArea",async()=>{const e=await n.e(4392).then(n.bind(n,4392)),{convert:t,squareMeters:r,toAreaUnit:a}=await n.e(41802).then(n.bind(n,41802));return await e.load(),(n,c,s)=>{const o=e.execute((0,i.rS)(n),{curveType:s});return t(r,a(c),o)}}),length:r("length",async()=>{const e=await n.e(67644).then(n.bind(n,67644)),{convertFromSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(41802).then(n.bind(n,41802));return(n,r)=>{const a=e.execute(n);return t(n.spatialReference,i(r),a)}}),geodeticLength:r("geodeticLength",async()=>{const e=await n.e(25925).then(n.bind(n,25925)),{convert:t,meters:r,toLengthUnit:a}=await n.e(41802).then(n.bind(n,41802));return await e.load(),(n,c,s)=>{const o=e.execute((0,i.rS)(n),{curveType:s});return t(r,a(c),o)}}),distance:r("distance",async()=>{const e=await n.e(55744).then(n.bind(n,55744)),{convertFromSpatialReferenceUnit:t,toLengthUnit:r}=await n.e(41802).then(n.bind(n,41802));return(n,a,c)=>{const s=e.execute((0,i.rS)(n),(0,i.rS)(a));return t(n.spatialReference,r(c),s)}}),densify:r("densify",async()=>{const e=await n.e(8609).then(n.bind(n,8609)),{convertToSpatialReferenceUnit:t,toLengthUnit:r}=await n.e(41802).then(n.bind(n,41802));return(n,c,s)=>(c=t(r(s),n.spatialReference,c),a(e.execute((0,i.rS)(n),c)))}),geodeticDensify:r("geodeticDensify",async()=>{const e=await n.e(51707).then(n.bind(n,51707)),{convert:t,meters:r,toLengthUnit:c}=await n.e(41802).then(n.bind(n,41802));return await e.load(),(n,s,o,u)=>(s=t(c(o),r,s),a(e.execute((0,i.rS)(n),s,{curveType:u})))}),generalize:r("generalize",async()=>{const e=await n.e(41373).then(n.bind(n,41373)),{convertToSpatialReferenceUnit:t,toLengthUnit:r}=await n.e(41802).then(n.bind(n,41802));return(n,c,s,o)=>(c=t(r(s),n.spatialReference,c),a(e.execute((0,i.rS)(n),c,o)))}),buffer:r("buffer",async()=>{const e=await Promise.all([n.e(49674),n.e(65238)]).then(n.bind(n,65238)),{convertToSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(41802).then(n.bind(n,41802));return(n,r,a)=>(r=t(i(a),n.spatialReference,r),e.execute(n,r))}),geodesicBuffer:r("geodesicBuffer",async()=>{const e=await n.e(33749).then(n.bind(n,33749)),{convert:t,meters:i,toLengthUnit:r}=await n.e(41802).then(n.bind(n,41802));return await e.load(),(n,a,c,s)=>(a=t(r(c),i,a),e.execute(n,a,{curveType:s}))}),offset:r("offset",async()=>{const e=await n.e(98635).then(n.bind(n,98635)),{convertToSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(41802).then(n.bind(n,41802));return(n,r,a,c)=>(r=t(i(a),n.spatialReference,r),e.execute(n,r,c))}),rotate:r("rotate",async()=>{const e=await n.e(49678).then(n.bind(n,49678)),{default:t}=await n.e(85178).then(n.bind(n,85178));return(n,r,c,s)=>{const o=(new t).rotate(r,c,s);return a(e.execute((0,i.rS)(n),o))}}),centroid:r("centroid",async()=>{const e=await n.e(82931).then(n.bind(n,82931));return t=>a(e.execute((0,i.rS)(t)))}),labelPoint:r("labelPoint",async()=>{const e=await Promise.all([n.e(135),n.e(53903)]).then(n.bind(n,53903));return t=>a(e.execute((0,i.rS)(t)))}),simplify:r("simplify",()=>n.e(37979).then(n.bind(n,37979)).then(e=>e.execute)),isSelfIntersecting:r("isSelfIntersecting",async()=>{const{NonSimpleResult:e}=await Promise.resolve().then(n.bind(n,15273)),t=await n.e(27948).then(n.bind(n,27948)),r=new Set([5,6,7,10,11,12]);return n=>{const a=new e;return!t.isSimple((0,i.rS)(n),a)&&r.has(a.m_reason)}}),isSimple:r("isSimple",()=>n.e(37979).then(n.bind(n,37979)).then(e=>e.isSimple)),convexHull:r("convexHull",()=>n.e(56048).then(n.bind(n,56048)).then(e=>e.execute)),getNearestCoordinate:r("getNearestCoordinate",async()=>{const e=await n.e(50554).then(n.bind(n,50554));return(t,n,r)=>{const c=e.getNearestCoordinate((0,i.rS)(t),(0,i.rS)(n),r);return{...c,coordinate:a(c.coordinate)}}}),getNearestVertex:r("getNearestVertex",async()=>{const e=await n.e(50554).then(n.bind(n,50554));return(t,n)=>{const r=e.getNearestVertex((0,i.rS)(t),(0,i.rS)(n));return{...r,coordinate:a(r.coordinate)}}})};function s(e,t){const n=c[e];return n.loaded?n.execute.apply(void 0,t):n.load().then(()=>s(e,t))}}}]);
//# sourceMappingURL=89957.a8190e84.chunk.js.map