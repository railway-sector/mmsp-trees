"use strict";(self.webpackChunkmmsp_trees=self.webpackChunkmmsp_trees||[]).push([[73814],{73814:(e,t,r)=>{r.d(t,{load:()=>f});var a=r(50076),n=r(13096),o=r(11668),s=r(77491),l=r(31933),i=r(65308),u=r(79942),c=r(64130),p=r(72945),y=r(81589),d=r(67061);async function f(e,t){const r=e.instance.portalItem;if(r?.id)return await r.load(t),function(e){const t=e.instance.portalItem;if(!t?.type||!e.supportedTypes.includes(t.type))throw new a.A("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:t?.type,expectedType:e.supportedTypes.join(", ")})}(e),e.validateItem&&e.validateItem(r),async function(e,t){const r=e.instance,n=r.portalItem;if(!n)return;let{url:i}=n;const{title:f}=n,w=(0,u.v)(n,"portal-item");if("group"===r.type)return async function(e,t,r){const n=e.portalItem;if(!e.sourceIsPortalItem)return;const{title:i,type:y}=n;if("Group Layer"===y){if(!(0,p.Y)(n,"Map"))throw new a.A("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return async function(e,t){const r=e.portalItem,n=await r.fetchData("json");if(!n)return;if(!t.populateGroupLayer)throw new a.A("portal:missing-populate-group-layer","Missing populate group layer");const o=(0,u.v)(r,"web-map");e.read(n,o),await t.populateGroupLayer(e,n,{context:o}),e.resourceReferences={portalItem:r,paths:o.readResourcePaths??[]}}(e,r)}return e.read({title:i},t),async function(e,t){let r;const{portalItem:n}=e;if(!n)return;const i=n.type,u=t.layerModuleTypeMap;if(!u)throw new a.A("portal:missing-layer-module-type-map","Layer module type map is required to construct sub layers");switch(i){case"Feature Service":case"Feature Collection":r=u.FeatureLayer;break;case"Stream Service":r=u.StreamLayer;break;case"Scene Service":r=u.SceneLayer;break;case"Video Service":r=u.VideoLayer;break;default:throw new a.A("portal:unsupported-item-type-as-group",`The item type '${i}' is not supported as a 'IGroupLayer'`)}const p="Video Service"===i,y=new s.v;let[f,{data:w}]=await Promise.all([r(),p?{data:null}:h(t,y)]),g=()=>f;if(p)return async function(e,t,r){const{portalItem:a}=e;if(!a?.url)return;const n=await(0,d.V)(a.url);n&&m(e,t,null,{layers:n.layers?.map(e=>{let{id:t,name:r}=e;return{id:t,name:r}})},r)}(e,g,u);if("Feature Service"===i){const t=(0,c.pJ)(w)?.customParameters;w=n.url?(await(0,c.bO)(w,n.url,y)).data:{},g=await async function(e,t){const{layers:r,tables:a}=e,n=[...r??[],...a??[]];if(!n.length)return;const o=new Set,s=[];for(const{layerType:u}of n){const e=u??"ArcGISFeatureLayer";if(o.has(e))continue;o.add(e);const r=t[(0,c.K8)(e)];s.push(r())}const l=await Promise.all(s),i=new Map;return Array.from(o).forEach((e,t)=>{i.set(e,l[t])}),e=>{let{layerType:t}=e;const r=t??"ArcGISFeatureLayer";return i.get(r)}}(w,u)||g;const{provider:r,preferredHost:a}=await async function(e,t){const{layersJSON:r,preferredHost:a}=await(0,o.Q)(e,t);if(!r)return{provider:null,preferredHost:a};const n=[...r.layers,...r.tables];return{provider:e=>n.find(t=>t.id===e.id),preferredHost:a}}(n.url,{customParameters:t,loadContext:y});return(0,l.Gh)(n,a),await m(e,g,g,w,u,r)}return"Scene Service"===i&&n.url&&(w=await(0,c.nu)(n,w,y)),(0,c.XH)(w)>0?await m(e,g,null,w,u):await async function(e,t,r){const{portalItem:a}=e;if(!a?.url)return;const n=await(0,d.V)(a.url);n&&m(e,t,null,{layers:n.layers?.map(c._r),tables:n.tables?.map(c._r)},r)}(e,g,u)}(e,r)}(r,w,e);i&&"media"!==r.type&&r.read({url:i},w);const g=new s.v,{data:I,preferredHost:b}=await h(e,g,t);return i=n.url,"isUrlHostModified"in r&&(b?r.applyPreferredHost({preferredHost:b}):r.applyHostFromPortalItem()),I&&r.read(I,w),r.resourceReferences={portalItem:n,paths:w.readResourcePaths??[]},"subtype-group"!==r.type&&r.read({title:f},w),(0,y.L)(r,w)}(e,t)}async function m(e,t,r,a,n,o){let s=a.layers||[];const l=a.tables||[];if("Feature Collection"===e.portalItem?.type?(s.forEach((e,t)=>{e.id=t,"Table"===e?.layerDefinition?.type&&l.push(e)}),s=s.filter(e=>"Table"!==e?.layerDefinition?.type)):(s.reverse(),l.reverse()),s.forEach(r=>{const n=o?.(r);if(n||!o){const o=w(e,t(r),a,r,n);e.add(o)}}),l.length){const t=r?null:await n.FeatureLayer();l.forEach(n=>{const s=o?.(n);if(s||!o){const o=w(e,r?r(n):t,a,n,s);e.tables.add(o)}})}}function w(e,t,r,a,n){const o=e.portalItem,s={portalItem:o.clone(),layerId:a.id};null!=a.url&&(s.url=a.url);const l=new t(s);if("sourceJSON"in l&&(l.sourceJSON=n),"subtype-group"!==l.type&&"catalog"!==l.type&&(l.sublayerTitleMode="service-name"),"Feature Collection"===o.type){const e={origin:"portal-item",portal:o.portal||i.A.getDefault()};l.read(a,e);const t=r.showLegend;null!=t&&l.read({showLegend:t},e)}return l}async function h(e,t,r){if(!1===e.supportsData)return{data:void 0};const a=e.instance,o=a.portalItem;if(!o)return{data:void 0};let s=null;try{s=await o.fetchData("json",r)}catch(i){}if(function(e){return"stream"!==e.type&&"layerId"in e}(a)){let e=null;const{count:r,preferredHost:i}=await async function(e,t,r){if(t?.layers&&t?.tables)return{count:(0,c.XH)(t)};const a=(0,n.qg)(e.url);if(!a)return{count:1};const o=a.url.path,s=await r.fetchServiceMetadata(o,{customParameters:(0,c.pJ)(t)?.customParameters}).catch(()=>null);return{count:(t?.layers?.length??s?.layers?.length??0)+(t?.tables?.length??s?.tables?.length??0),preferredHost:(0,l.OP)(e)?(0,l.G$)():null}}(o,s,t);if((0,l.Gh)(o,i),(s?.layers||s?.tables)&&r>0){if(null==a.layerId){const e=(0,c.l)(a.type),t=e?.length?(0,c.Ju)(s,e)[0]:(0,c.pJ)(s);t&&(a.layerId=t.id)}e=function(e,t){const{layerId:r}=t,a=e.layers?.find(e=>e.id===r)||e.tables?.find(e=>e.id===r);return a&&function(e,t){const r="layerType"in e&&e.layerType,{type:a}=t;return!("feature"===a&&r&&"ArcGISFeatureLayer"!==e.layerType||"catalog"===a&&!r||"oriented-imagery"===a&&!r||"subtype-group"===a&&!r)}(a,t)?a:null}(s,a),"OrientedImageryLayer"===e?.layerType&&"oriented-imagery"===a.type&&a.supportedSourceTypes.add("Feature Layer"),e&&null!=s.showLegend&&(e.showLegend=s.showLegend)}return r>1&&"sublayerTitleMode"in a&&"service-name"!==a.sublayerTitleMode&&(a.sublayerTitleMode="item-title-and-service-name"),{data:e,preferredHost:i}}return{data:s}}}}]);
//# sourceMappingURL=73814.c5eef3a8.chunk.js.map